<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>